<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>